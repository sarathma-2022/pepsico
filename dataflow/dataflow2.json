{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sales1",
						"type": "DatasetReference"
					},
					"name": "handlingErroRows"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "split1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          employee_id as string,",
				"          date as string,",
				"          quarter as string,",
				"          bonus as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> handlingErroRows",
				"handlingErroRows split(isNull(toDate(date,'dd-MM-yyyy')),",
				"     disjoint: false) ~> split1@(invalid, valid)",
				"split1@valid derive(date = toDate(date, 'dd-MM-yyyy')) ~> derivedColumn1",
				"split1@invalid derive(files = \"mylocation\",",
				"          quarter = toInteger(quarter),",
				"          bonus = toInteger(bonus)) ~> derivedColumn2",
				"derivedColumn2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          employee_id as integer,",
				"          date as string,",
				"          quarter as integer,",
				"          bonus as integer,",
				"          files as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          employee_id,",
				"          date,",
				"          quarter,",
				"          bonus,",
				"          files",
				"     )) ~> sink1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          employee_id as integer,",
				"          date as date,",
				"          quarter as integer,",
				"          bonus as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          employee_id,",
				"          date,",
				"          quarter,",
				"          bonus",
				"     )) ~> sink2"
			]
		}
	}
}